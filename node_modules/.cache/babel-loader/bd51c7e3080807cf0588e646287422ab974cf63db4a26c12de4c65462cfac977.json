{"ast":null,"code":"export default {\n  mounted(el, binding) {\n    console.log(el);\n    console.log(this.$refs.observer);\n    const options = {\n      rootMargin: '0px',\n      threshold: 1.0\n    };\n    const callback = (entries, observer) => {\n      //это как раз та функция, которая отработает, когда мы пересекли необходимвй элемент\n      if (entries[0].isIntersecting && this.page < this.totalPages) {\n        this.loadMorePost();\n      }\n    };\n    const observer = new IntersectionObserver(callback, options);\n    observer.observe(this.$refs.observer);\n  }\n};","map":{"version":3,"names":["mounted","el","binding","console","log","$refs","observer","options","rootMargin","threshold","callback","entries","isIntersecting","page","totalPages","loadMorePost","IntersectionObserver","observe"],"sources":["C:/Users/Iana/Desktop/blatttt/newapp/src/directives/Vintersaction.js"],"sourcesContent":["export default {\r\n    mounted(el, binding) {\r\n        console.log(el)\r\n        console.log(this.$refs.observer)\r\n        const options = {\r\n            rootMargin: '0px',\r\n            threshold: 1.0\r\n        }\r\n\r\n        const callback = (entries, observer) => { //это как раз та функция, которая отработает, когда мы пересекли необходимвй элемент\r\n            if(entries[0].isIntersecting && this.page < this.totalPages) {\r\n                this.loadMorePost();\r\n            }\r\n        }\r\n\r\n        const observer = new IntersectionObserver(callback, options);\r\n        observer.observe(this.$refs.observer)\r\n    }\r\n}"],"mappings":"AAAA,eAAe;EACXA,OAAOA,CAACC,EAAE,EAAEC,OAAO,EAAE;IACjBC,OAAO,CAACC,GAAG,CAACH,EAAE,CAAC;IACfE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAC;IAChC,MAAMC,OAAO,GAAG;MACZC,UAAU,EAAE,KAAK;MACjBC,SAAS,EAAE;IACf,CAAC;IAED,MAAMC,QAAQ,GAAGA,CAACC,OAAO,EAAEL,QAAQ,KAAK;MAAE;MACtC,IAAGK,OAAO,CAAC,CAAC,CAAC,CAACC,cAAc,IAAI,IAAI,CAACC,IAAI,GAAG,IAAI,CAACC,UAAU,EAAE;QACzD,IAAI,CAACC,YAAY,EAAE;MACvB;IACJ,CAAC;IAED,MAAMT,QAAQ,GAAG,IAAIU,oBAAoB,CAACN,QAAQ,EAAEH,OAAO,CAAC;IAC5DD,QAAQ,CAACW,OAAO,CAAC,IAAI,CAACZ,KAAK,CAACC,QAAQ,CAAC;EACzC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}