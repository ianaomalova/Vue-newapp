{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Страница с постами: \", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"app__btns\"\n};\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = {\n  ref: \"observer\",\n  class: \"observer\"\n};\nexport function render(_ctx, _cache) {\n  const _component_my_input = _resolveComponent(\"my-input\");\n  const _component_my_button = _resolveComponent(\"my-button\");\n  const _component_my_select = _resolveComponent(\"my-select\");\n  const _component_post_form = _resolveComponent(\"post-form\");\n  const _component_my_dialog = _resolveComponent(\"my-dialog\");\n  const _component_post_list = _resolveComponent(\"post-list\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createVNode(_component_my_input, {\n    style: {\n      \"width\": \"100%\"\n    },\n    modelValue: _ctx.searchQuery,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.searchQuery = $event),\n    placeholder: \"Поиск...\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_my_button, {\n    onClick: _ctx.showDialog\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Создать пост\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_my_select, {\n    \"model-value1\": _ctx.selectedSort,\n    \"onUpdate:modelValue1\": _cache[1] || (_cache[1] = $event => _ctx.selectedSort = $event),\n    options: _ctx.sortOptions\n  }, null, 8 /* PROPS */, [\"model-value1\", \"options\"])]), _createVNode(_component_my_dialog, {\n    show: _ctx.dialogVisible,\n    \"onUpdate:show\": _cache[2] || (_cache[2] = $event => _ctx.dialogVisible = $event)\n  }, {\n    default: _withCtx(() => [_createVNode(_component_post_form, {\n      onCreate: _ctx.CreatePost\n    }, null, 8 /* PROPS */, [\"onCreate\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"show\"]), !_ctx.isPostLoading ? (_openBlock(), _createBlock(_component_post_list, {\n    key: 0,\n    posts: _ctx.sortedAndSearchPost,\n    onRemove: _ctx.RemovePost\n  }, null, 8 /* PROPS */, [\"posts\", \"onRemove\"])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"Идет загрузка...\")), _createCommentVNode(\"        <div class=\\\"page__wrapper\\\">\"), _createCommentVNode(\"            <div\"), _createCommentVNode(\"                    v-for=\\\"pageNumber in totalPages\\\"\"), _createCommentVNode(\"                    :key=\\\"pageNumber\\\"\"), _createCommentVNode(\"                    class=\\\"page\\\"\"), _createCommentVNode(\"                    :class=\\\"{\"), _createCommentVNode(\"                        'current-page' : page === pageNumber\"), _createCommentVNode(\"                    }\\\"\"), _createCommentVNode(\"                    @click=\\\"changePage(pageNumber)\\\"\"), _createCommentVNode(\"            >\"), _createCommentVNode(\"                {{ pageNumber }}\"), _createCommentVNode(\"            </div>\"), _createCommentVNode(\"        </div>\"), _createElementVNode(\"div\", _hoisted_5, null, 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"names":["class","_createElementVNode","ref","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_my_input","style","_ctx","searchQuery","$event","placeholder","_hoisted_3","_component_my_button","onClick","showDialog","_component_my_select","selectedSort","options","sortOptions","_component_my_dialog","show","dialogVisible","_component_post_form","onCreate","CreatePost","isPostLoading","_createBlock","_component_post_list","posts","sortedAndSearchPost","onRemove","RemovePost","_hoisted_4","_createCommentVNode","_hoisted_5"],"sources":["C:\\Users\\Iana\\Desktop\\blatttt\\newapp\\src\\App.vue"],"sourcesContent":["<template>\r\n    <div class=\"app\">\r\n        <h1>Страница с постами: </h1>\r\n        <my-input style=\"width: 100%\" v-model=\"searchQuery\" placeholder=\"Поиск...\"/>\r\n\r\n        <div class=\"app__btns\">\r\n            <my-button @click=\"showDialog\">Создать пост</my-button>\r\n            <my-select\r\n                    v-model:model-value1=\"selectedSort\"\r\n                    :options=\"sortOptions\"\r\n            />\r\n        </div>\r\n\r\n    <my-dialog v-model:show=\"dialogVisible\">\r\n        <post-form @create=\"CreatePost\"/>\r\n    </my-dialog>\r\n\r\n    <post-list\r\n            :posts=\"sortedAndSearchPost\"\r\n            @remove=\"RemovePost\"\r\n            v-if=\"!isPostLoading\"\r\n    />\r\n\r\n        <div v-else>Идет загрузка...</div>\r\n<!--        <div class=\"page__wrapper\">-->\r\n<!--            <div-->\r\n<!--                    v-for=\"pageNumber in totalPages\"-->\r\n<!--                    :key=\"pageNumber\"-->\r\n<!--                    class=\"page\"-->\r\n<!--                    :class=\"{-->\r\n<!--                        'current-page' : page === pageNumber-->\r\n<!--                    }\"-->\r\n<!--                    @click=\"changePage(pageNumber)\"-->\r\n<!--            >-->\r\n<!--                {{ pageNumber }}-->\r\n<!--            </div>-->\r\n<!--        </div>-->\r\n        <div ref=\"observer\" class=\"observer\">\r\n\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import PostForm from \"@/components/PostForm\";\r\n    import PostList from \"@/components/PostList\";\r\n    import MyDialog from \"@/components/UI/MyDialog\";\r\n    import axios from 'axios'\r\n    import MySelect from \"@/components/UI/MySelect\";\r\n    export default {\r\n        components: {\r\n            MySelect,\r\n            MyDialog,\r\n            PostList,\r\n            PostForm\r\n        },\r\n        data() {\r\n            return{\r\n                posts: [],\r\n                dialogVisible: false,\r\n                isPostLoading: false,\r\n                selectedSort: '',\r\n                sortOptions: [\r\n                    {value: 'title', name: 'По названию'},\r\n                    {value: 'body', name: 'По описанию'}\r\n                ],\r\n                searchQuery: '',\r\n                page: 1,\r\n                limit: 10,\r\n                totalPages: 0\r\n            }\r\n        },\r\n        methods: {\r\n            CreatePost(post) {\r\n                this.posts.push(post)\r\n                this.dialogVisible = false\r\n            },\r\n            RemovePost(post) {\r\n                this.posts = this.posts.filter(p => p.id !== post.id)\r\n            },\r\n            showDialog() {\r\n                this.dialogVisible = true\r\n            },\r\n            async fetchPost() {\r\n                try {\r\n                    console.log('Fetch')\r\n                    this.isPostLoading = true;\r\n                    const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\r\n                        params: {\r\n                            _page: this.page,\r\n                            _limit: this.limit\r\n                        }\r\n                    });\r\n                    this.totalPages = Math.ceil(response.headers['x-total-count'] / this.limit);\r\n                    //console.log(response.data);\r\n                    this.posts = response.data;\r\n                } catch (e) {\r\n                    alert('Ошибка')\r\n                } finally {\r\n                    this.isPostLoading = false;\r\n                }\r\n            },\r\n            async loadMorePost() {\r\n                try {\r\n                    console.log('Load')\r\n                    this.page += 1;\r\n                    const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\r\n                        params: {\r\n                            _page: this.page,\r\n                            _limit: this.limit\r\n                        }\r\n                    });\r\n                    this.totalPages = Math.ceil(response.headers['x-total-count'] / this.limit);\r\n                    //console.log(response.data);\r\n                    this.posts = [...this.posts, ...response.data];\r\n                } catch (e) {\r\n                    alert('Ошибка')\r\n                } finally {\r\n\r\n                }\r\n            }\r\n            // changePage(pageNumber) {\r\n            //     this.page = pageNumber;\r\n            // }\r\n        },\r\n        mounted() {\r\n            this.fetchPost();\r\n            console.log('Mounted')\r\n            //console.log(this.$refs.observer)\r\n            const options = {\r\n                rootMargin: '0px',\r\n                threshold: 1.0\r\n            }\r\n\r\n            const callback = (entries, observer) => { //это как раз та функция, которая отработает, когда мы пересекли необходимвй элемент\r\n                if(entries[0].isIntersecting && ) {\r\n                    this.loadMorePost();\r\n                }\r\n            }\r\n\r\n            const observer = new IntersectionObserver(callback, options);\r\n            observer.observe(this.$refs.observer)\r\n        },\r\n        computed: {\r\n            sortedPosts() {\r\n                return [...this.posts].sort((post1, post2) =>\r\n                    post1[this.selectedSort]?.localeCompare(post2[this.selectedSort])\r\n                )\r\n            },\r\n            sortedAndSearchPost() {\r\n                return this.sortedPosts.filter(post => post.title.toLowerCase().includes(this.searchQuery.toLowerCase()))\r\n            }\r\n        },\r\n        watch: {\r\n            // page() {\r\n            //     this.fetchPost();\r\n            // }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\nform {\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n    .app {\r\n        padding: 20px;\r\n    }\r\n    .app__btns {\r\n        margin: 15px 0;\r\n        display: flex;\r\n        justify-content: space-between;\r\n    }\r\n    .page__wrapper {\r\n        display: flex;\r\n        margin-top: 15px;\r\n        align-items: center;\r\n        align-content: center;\r\n        justify-content: center;\r\n    }\r\n    .page {\r\n        border: 1px solid black;\r\n        padding: 10px;\r\n        margin-right: 5px;\r\n    }\r\n    .current-page {\r\n        border: 2px solid teal;\r\n    }\r\n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAK;gEACZC,mBAAA,CAA6B,YAAzB,sBAAoB;;EAGnBD,KAAK,EAAC;AAAW;;;;;EAgCjBE,GAAG,EAAC,UAAU;EAACF,KAAK,EAAC;;;;;;;;;uBApC9BG,mBAAA,CAuCM,OAvCNC,UAuCM,GAtCFC,UAA6B,EAC7BC,YAAA,CAA4EC,mBAAA;IAAlEC,KAAmB,EAAnB;MAAA;IAAA,CAAmB;gBAAUC,IAAA,CAAAC,WAAW;+DAAXD,IAAA,CAAAC,WAAW,GAAAC,MAAA;IAAEC,WAAW,EAAC;2CAEhEX,mBAAA,CAMM,OANNY,UAMM,GALFP,YAAA,CAAuDQ,oBAAA;IAA3CC,OAAK,EAAEN,IAAA,CAAAO;EAAU;sBAAE,MAAY,C,iBAAZ,cAAY,E;;kCAC3CV,YAAA,CAGEW,oBAAA;IAFc,cAAY,EAAER,IAAA,CAAAS,YAAY;gEAAZT,IAAA,CAAAS,YAAY,GAAAP,MAAA;IACjCQ,OAAO,EAAEV,IAAA,CAAAW;0DAI1Bd,YAAA,CAEYe,oBAAA;IAFOC,IAAI,EAAEb,IAAA,CAAAc,aAAa;yDAAbd,IAAA,CAAAc,aAAa,GAAAZ,MAAA;;sBAClC,MAAiC,CAAjCL,YAAA,CAAiCkB,oBAAA;MAArBC,QAAM,EAAEhB,IAAA,CAAAiB;IAAU,sC;;gCAMnBjB,IAAA,CAAAkB,aAAa,I,cAH5BC,YAAA,CAIEC,oBAAA;;IAHOC,KAAK,EAAErB,IAAA,CAAAsB,mBAAmB;IAC1BC,QAAM,EAAEvB,IAAA,CAAAwB;mEAIb9B,mBAAA,CAAkC,OAAA+B,UAAA,EAAtB,kBAAgB,IACpCC,mBAAA,yCAA0C,EAC1CA,mBAAA,oBAAuB,EACvBA,mBAAA,0DAA2D,EAC3DA,mBAAA,2CAA4C,EAC5CA,mBAAA,sCAAuC,EACvCA,mBAAA,kCAAoC,EACpCA,mBAAA,gEAAmE,EACnEA,mBAAA,2BAA6B,EAC7BA,mBAAA,yDAA0D,EAC1DA,mBAAA,iBAAoB,EACpBA,mBAAA,oCAAuC,EACvCA,mBAAA,sBAAyB,EACzBA,mBAAA,kBAAqB,EACblC,mBAAA,CAEM,OAFNmC,UAEM,8B"},"metadata":{},"sourceType":"module","externalDependencies":[]}