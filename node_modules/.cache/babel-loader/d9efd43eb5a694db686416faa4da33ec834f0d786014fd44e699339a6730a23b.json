{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, mergeProps as _mergeProps } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"option\", {\n  disabled: \"\",\n  value: \"\"\n}, \"Выберите из списка\", -1 /* HOISTED */);\nconst _hoisted_2 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"select\", _mergeProps($props.modelValue, {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.changeOption && $options.changeOption(...args))\n  }), [_hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.options, option => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: option.value,\n      value: option.value\n    }, _toDisplayString(option.name), 9 /* TEXT, PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))], 16 /* FULL_PROPS */);\n}","map":{"version":3,"names":["_createElementVNode","disabled","value","_createElementBlock","_mergeProps","$props","modelValue","onClick","_cache","args","$options","changeOption","_hoisted_1","_Fragment","_renderList","options","option","key","name","_hoisted_2"],"sources":["C:\\Users\\Iana\\Desktop\\blatttt\\newapp\\src\\components\\UI\\MySelect.vue"],"sourcesContent":["<template>\r\n    <select v-bind=\"modelValue\" @click=\"changeOption\">\r\n        <option disabled value=\"\">Выберите из списка</option>\r\n        <option\r\n                v-for=\"option in options\"\r\n                :key=\"option.value\"\r\n                :value=\"option.value\"\r\n        >\r\n                {{ option.name }}\r\n        </option>\r\n    </select>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: 'my-select',\r\n        props: {\r\n            modelValue: {\r\n                type: String\r\n            },\r\n            options: {\r\n                type: Array,\r\n                default: () => []\r\n            }\r\n        },\r\n        methods: {\r\n            changeOption(event) {\r\n                this.$emit('update:modelValue', event)\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":";gCAEQA,mBAAA,CAAqD;EAA7CC,QAAQ,EAAR,EAAQ;EAACC,KAAK,EAAC;GAAG,oBAAkB;;;uBADhDC,mBAAA,CASS,UATTC,WAAA,CAAgBC,MASP,CAAAC,UATiB;IAAGC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;OAC5CG,UAAqD,G,kBACrDT,mBAAA,CAMSU,SAAA,QAAAC,WAAA,CALgBT,MAAA,CAAAU,OAAO,EAAjBC,MAAM;yBADrBb,mBAAA,CAMS;MAJAc,GAAG,EAAED,MAAM,CAACd,KAAK;MACjBA,KAAK,EAAEc,MAAM,CAACd;wBAEZc,MAAM,CAACE,IAAI,wBAAAC,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}