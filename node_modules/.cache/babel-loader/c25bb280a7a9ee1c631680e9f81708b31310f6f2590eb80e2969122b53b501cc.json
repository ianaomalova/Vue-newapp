{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport PostForm from \"@/components/PostForm\";\nimport PostList from \"@/components/PostList\";\nimport MyDialog from \"@/components/UI/MyDialog\";\nimport axios from 'axios';\nimport MySelect from \"@/components/UI/MySelect\";\nexport default {\n  components: {\n    MySelect,\n    MyDialog,\n    PostList,\n    PostForm\n  },\n  data() {\n    return {\n      posts: [],\n      dialogVisible: false,\n      isPostLoading: false,\n      selectedSort: '',\n      sortOptions: [{\n        value: 'title',\n        name: 'По названию'\n      }, {\n        value: 'body',\n        name: 'По описанию'\n      }]\n    };\n  },\n  methods: {\n    CreatePost(post) {\n      this.posts.push(post);\n      this.dialogVisible = false;\n    },\n    RemovePost(post) {\n      this.posts = this.posts.filter(p => p.id !== post.id);\n    },\n    showDialog() {\n      this.dialogVisible = true;\n    },\n    async fetchPost() {\n      try {\n        this.isPostLoading = true;\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts?_limit=10');\n        console.log(response.data);\n        this.posts = response.data;\n      } catch (e) {\n        alert('Ошибка');\n      } finally {\n        this.isPostLoading = false;\n      }\n    }\n  },\n  mounted() {\n    this.fetchPost();\n  },\n  computed: {\n    sortedPosts() {\n      return [...this.posts].sort((post1, post2) => {\n        return post1[newValue]?.localeCompare(post2[newValue]);\n      });\n    }\n  },\n  watch: {\n    //функция наблюдатель должна иметь такое же название как и модель, которая объявлена в компоненте\n    //параметром функция наблюдатель принимает новое значение, т.е то на что была изменена модель\n    selectedSort(newValue) {\n      this.posts.sort((post1, post2) => {\n        return post1[newValue]?.localeCompare(post2[newValue]);\n      });\n    }\n  }\n};","map":{"version":3,"names":["PostForm","PostList","MyDialog","axios","MySelect","components","data","posts","dialogVisible","isPostLoading","selectedSort","sortOptions","value","name","methods","CreatePost","post","push","RemovePost","filter","p","id","showDialog","fetchPost","response","get","console","log","e","alert","mounted","computed","sortedPosts","sort","post1","post2","newValue","localeCompare","watch"],"sources":["C:\\Users\\Iana\\Desktop\\blatttt\\newapp\\src\\App.vue"],"sourcesContent":["<template>\r\n    <div class=\"app\">\r\n        <h1>Страница с постами: </h1>\r\n\r\n        <div class=\"app__btns\">\r\n            <my-button @click=\"showDialog\">Создать пост</my-button>\r\n            <my-select\r\n                    v-model:model-value1=\"selectedSort\"\r\n                    :options=\"sortOptions\"\r\n            />\r\n        </div>\r\n\r\n    <my-dialog v-model:show=\"dialogVisible\">\r\n        <post-form @create=\"CreatePost\"/>\r\n    </my-dialog>\r\n\r\n    <post-list\r\n            :posts=\"posts\"\r\n            @remove=\"RemovePost\"\r\n            v-if=\"!isPostLoading\"\r\n    />\r\n\r\n        <div v-else>Идет загрузка...</div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import PostForm from \"@/components/PostForm\";\r\n    import PostList from \"@/components/PostList\";\r\n    import MyDialog from \"@/components/UI/MyDialog\";\r\n    import axios from 'axios'\r\n    import MySelect from \"@/components/UI/MySelect\";\r\n    export default {\r\n        components: {\r\n            MySelect,\r\n            MyDialog,\r\n            PostList,\r\n            PostForm\r\n        },\r\n        data() {\r\n            return{\r\n                posts: [],\r\n                dialogVisible: false,\r\n                isPostLoading: false,\r\n                selectedSort: '',\r\n                sortOptions: [\r\n                    {value: 'title', name: 'По названию'},\r\n                    {value: 'body', name: 'По описанию'}\r\n                ]\r\n            }\r\n        },\r\n        methods: {\r\n            CreatePost(post) {\r\n                this.posts.push(post)\r\n                this.dialogVisible = false\r\n            },\r\n            RemovePost(post) {\r\n                this.posts = this.posts.filter(p => p.id !== post.id)\r\n            },\r\n            showDialog() {\r\n                this.dialogVisible = true\r\n            },\r\n            async fetchPost() {\r\n                try {\r\n                    this.isPostLoading = true;\r\n                    const response = await axios.get('https://jsonplaceholder.typicode.com/posts?_limit=10');\r\n                    console.log(response.data);\r\n                    this.posts = response.data;\r\n                } catch (e) {\r\n                    alert('Ошибка')\r\n                } finally {\r\n                    this.isPostLoading = false;\r\n                }\r\n            }\r\n        },\r\n        mounted() {\r\n            this.fetchPost()\r\n        },\r\n        computed: {\r\n            sortedPosts() {\r\n                return [...this.posts].sort((post1, post2) => {\r\n                    return post1[newValue]?.localeCompare(post2[newValue])\r\n                })\r\n            }\r\n        },\r\n        watch: {\r\n            //функция наблюдатель должна иметь такое же название как и модель, которая объявлена в компоненте\r\n            //параметром функция наблюдатель принимает новое значение, т.е то на что была изменена модель\r\n            selectedSort(newValue) {\r\n                this.posts.sort((post1, post2) => {\r\n                    return post1[newValue]?.localeCompare(post2[newValue])\r\n                })\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\nform {\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n    .app {\r\n        padding: 20px;\r\n    }\r\n    .app__btns {\r\n        margin: 15px 0;\r\n        display: flex;\r\n        justify-content: space-between;\r\n    }\r\n\r\n</style>"],"mappings":";AA4BI,OAAOA,QAAO,MAAO,uBAAuB;AAC5C,OAAOC,QAAO,MAAO,uBAAuB;AAC5C,OAAOC,QAAO,MAAO,0BAA0B;AAC/C,OAAOC,KAAI,MAAO,OAAM;AACxB,OAAOC,QAAO,MAAO,0BAA0B;AAC/C,eAAe;EACXC,UAAU,EAAE;IACRD,QAAQ;IACRF,QAAQ;IACRD,QAAQ;IACRD;EACJ,CAAC;EACDM,IAAIA,CAAA,EAAG;IACH,OAAM;MACFC,KAAK,EAAE,EAAE;MACTC,aAAa,EAAE,KAAK;MACpBC,aAAa,EAAE,KAAK;MACpBC,YAAY,EAAE,EAAE;MAChBC,WAAW,EAAE,CACT;QAACC,KAAK,EAAE,OAAO;QAAEC,IAAI,EAAE;MAAa,CAAC,EACrC;QAACD,KAAK,EAAE,MAAM;QAAEC,IAAI,EAAE;MAAa;IAE3C;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,UAAUA,CAACC,IAAI,EAAE;MACb,IAAI,CAACT,KAAK,CAACU,IAAI,CAACD,IAAI;MACpB,IAAI,CAACR,aAAY,GAAI,KAAI;IAC7B,CAAC;IACDU,UAAUA,CAACF,IAAI,EAAE;MACb,IAAI,CAACT,KAAI,GAAI,IAAI,CAACA,KAAK,CAACY,MAAM,CAACC,CAAA,IAAKA,CAAC,CAACC,EAAC,KAAML,IAAI,CAACK,EAAE;IACxD,CAAC;IACDC,UAAUA,CAAA,EAAG;MACT,IAAI,CAACd,aAAY,GAAI,IAAG;IAC5B,CAAC;IACD,MAAMe,SAASA,CAAA,EAAG;MACd,IAAI;QACA,IAAI,CAACd,aAAY,GAAI,IAAI;QACzB,MAAMe,QAAO,GAAI,MAAMrB,KAAK,CAACsB,GAAG,CAAC,sDAAsD,CAAC;QACxFC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAClB,IAAI,CAAC;QAC1B,IAAI,CAACC,KAAI,GAAIiB,QAAQ,CAAClB,IAAI;MAC9B,EAAE,OAAOsB,CAAC,EAAE;QACRC,KAAK,CAAC,QAAQ;MAClB,UAAU;QACN,IAAI,CAACpB,aAAY,GAAI,KAAK;MAC9B;IACJ;EACJ,CAAC;EACDqB,OAAOA,CAAA,EAAG;IACN,IAAI,CAACP,SAAS,EAAC;EACnB,CAAC;EACDQ,QAAQ,EAAE;IACNC,WAAWA,CAAA,EAAG;MACV,OAAO,CAAC,GAAG,IAAI,CAACzB,KAAK,CAAC,CAAC0B,IAAI,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;QAC1C,OAAOD,KAAK,CAACE,QAAQ,CAAC,EAAEC,aAAa,CAACF,KAAK,CAACC,QAAQ,CAAC;MACzD,CAAC;IACL;EACJ,CAAC;EACDE,KAAK,EAAE;IACH;IACA;IACA5B,YAAYA,CAAC0B,QAAQ,EAAE;MACnB,IAAI,CAAC7B,KAAK,CAAC0B,IAAI,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;QAC9B,OAAOD,KAAK,CAACE,QAAQ,CAAC,EAAEC,aAAa,CAACF,KAAK,CAACC,QAAQ,CAAC;MACzD,CAAC;IACL;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}