{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport PostForm from \"@/components/PostForm\";\nimport PostList from \"@/components/PostList\";\nimport MyDialog from \"@/components/UI/MyDialog\";\nimport axios from 'axios';\nimport MySelect from \"@/components/UI/MySelect\";\nexport default {\n  components: {\n    MySelect,\n    MyDialog,\n    PostList,\n    PostForm\n  },\n  data() {\n    return {\n      posts: [],\n      dialogVisible: false,\n      isPostLoading: false,\n      selectedSort: '',\n      sortOptions: [{\n        value: 'title',\n        name: 'По названию'\n      }, {\n        value: 'body',\n        name: 'По описанию'\n      }],\n      searchQuery: '',\n      page: 1,\n      limit: 10,\n      totalPages: 0\n    };\n  },\n  methods: {\n    CreatePost(post) {\n      this.posts.push(post);\n      this.dialogVisible = false;\n    },\n    RemovePost(post) {\n      this.posts = this.posts.filter(p => p.id !== post.id);\n    },\n    showDialog() {\n      this.dialogVisible = true;\n    },\n    async fetchPost() {\n      try {\n        this.isPostLoading = true;\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\n          params: {\n            _page: this.page,\n            _limit: this.limit\n          }\n        });\n        this.totalPages = Math.ceil(response.headers['x-total-count'] / this.limit);\n        console.log(response.data);\n        this.posts = response.data;\n      } catch (e) {\n        alert('Ошибка11');\n      } finally {\n        this.isPostLoading = false;\n      }\n    },\n    async loadMorePost() {\n      try {\n        this.page += 1;\n        this.isPostLoading = true;\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\n          params: {\n            _page: this.page,\n            _limit: this.limit\n          }\n        });\n        this.totalPages = Math.ceil(response.headers['x-total-count'] / this.limit);\n        console.log(response.data);\n        this.posts = [...this.posts, ...this.response.data];\n      } catch (e) {\n        alert('Ошибка');\n      } finally {\n        this.isPostLoading = false;\n      }\n    }\n    // changePage(pageNumber) {\n    //     this.page = pageNumber;\n    // }\n  },\n\n  mounted() {\n    this.fetchPost();\n    console.log(this.$refs.observer);\n    const options = {\n      rootMargin: '0px',\n      threshold: 1.0\n    };\n    const callback = (entries, observer) => {\n      //это как раз та функция, которая отработает, когда мы пересекли необходимвй элемент\n      if (entries[0].isIntersecting) {\n        this.loadMorePost();\n      }\n    };\n    const observer = new IntersectionObserver(callback, options);\n    observer.observe(this.$refs.observer);\n  },\n  computed: {\n    sortedPosts() {\n      return [...this.posts].sort((post1, post2) => post1[this.selectedSort]?.localeCompare(post2[this.selectedSort]));\n    },\n    sortedAndSearchPost() {\n      return this.sortedPosts.filter(post => post.title.toLowerCase().includes(this.searchQuery.toLowerCase()));\n    }\n  },\n  watch: {\n    // page() {\n    //     this.fetchPost();\n    // }\n  }\n};","map":{"version":3,"names":["PostForm","PostList","MyDialog","axios","MySelect","components","data","posts","dialogVisible","isPostLoading","selectedSort","sortOptions","value","name","searchQuery","page","limit","totalPages","methods","CreatePost","post","push","RemovePost","filter","p","id","showDialog","fetchPost","response","get","params","_page","_limit","Math","ceil","headers","console","log","e","alert","loadMorePost","mounted","$refs","observer","options","rootMargin","threshold","callback","entries","isIntersecting","IntersectionObserver","observe","computed","sortedPosts","sort","post1","post2","localeCompare","sortedAndSearchPost","title","toLowerCase","includes","watch"],"sources":["C:\\Users\\Iana\\Desktop\\blatttt\\newapp\\src\\App.vue"],"sourcesContent":["<template>\r\n    <div class=\"app\">\r\n        <h1>Страница с постами: </h1>\r\n        <my-input style=\"width: 100%\" v-model=\"searchQuery\" placeholder=\"Поиск...\"/>\r\n\r\n        <div class=\"app__btns\">\r\n            <my-button @click=\"showDialog\">Создать пост</my-button>\r\n            <my-select\r\n                    v-model:model-value1=\"selectedSort\"\r\n                    :options=\"sortOptions\"\r\n            />\r\n        </div>\r\n\r\n    <my-dialog v-model:show=\"dialogVisible\">\r\n        <post-form @create=\"CreatePost\"/>\r\n    </my-dialog>\r\n\r\n    <post-list\r\n            :posts=\"sortedAndSearchPost\"\r\n            @remove=\"RemovePost\"\r\n            v-if=\"!isPostLoading\"\r\n    />\r\n\r\n        <div v-else>Идет загрузка...</div>\r\n<!--        <div class=\"page__wrapper\">-->\r\n<!--            <div-->\r\n<!--                    v-for=\"pageNumber in totalPages\"-->\r\n<!--                    :key=\"pageNumber\"-->\r\n<!--                    class=\"page\"-->\r\n<!--                    :class=\"{-->\r\n<!--                        'current-page' : page === pageNumber-->\r\n<!--                    }\"-->\r\n<!--                    @click=\"changePage(pageNumber)\"-->\r\n<!--            >-->\r\n<!--                {{ pageNumber }}-->\r\n<!--            </div>-->\r\n<!--        </div>-->\r\n        <div ref=\"observer\" class=\"observer\">\r\n\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import PostForm from \"@/components/PostForm\";\r\n    import PostList from \"@/components/PostList\";\r\n    import MyDialog from \"@/components/UI/MyDialog\";\r\n    import axios from 'axios'\r\n    import MySelect from \"@/components/UI/MySelect\";\r\n    export default {\r\n        components: {\r\n            MySelect,\r\n            MyDialog,\r\n            PostList,\r\n            PostForm\r\n        },\r\n        data() {\r\n            return{\r\n                posts: [],\r\n                dialogVisible: false,\r\n                isPostLoading: false,\r\n                selectedSort: '',\r\n                sortOptions: [\r\n                    {value: 'title', name: 'По названию'},\r\n                    {value: 'body', name: 'По описанию'}\r\n                ],\r\n                searchQuery: '',\r\n                page: 1,\r\n                limit: 10,\r\n                totalPages: 0\r\n            }\r\n        },\r\n        methods: {\r\n            CreatePost(post) {\r\n                this.posts.push(post)\r\n                this.dialogVisible = false\r\n            },\r\n            RemovePost(post) {\r\n                this.posts = this.posts.filter(p => p.id !== post.id)\r\n            },\r\n            showDialog() {\r\n                this.dialogVisible = true\r\n            },\r\n            async fetchPost() {\r\n                try {\r\n                    this.isPostLoading = true;\r\n                    const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\r\n                        params: {\r\n                            _page: this.page,\r\n                            _limit: this.limit\r\n                        }\r\n                    });\r\n                    this.totalPages = Math.ceil(response.headers['x-total-count'] / this.limit);\r\n                    console.log(response.data);\r\n                    this.posts = response.data;\r\n                } catch (e) {\r\n                    alert('Ошибка11')\r\n                } finally {\r\n                    this.isPostLoading = false;\r\n                }\r\n            },\r\n            async loadMorePost() {\r\n                try {\r\n                    this.page += 1;\r\n                    this.isPostLoading = true;\r\n                    const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\r\n                        params: {\r\n                            _page: this.page,\r\n                            _limit: this.limit\r\n                        }\r\n                    });\r\n                    this.totalPages = Math.ceil(response.headers['x-total-count'] / this.limit);\r\n                    console.log(response.data);\r\n                    this.posts = [...this.posts, ...this.response.data];\r\n                } catch (e) {\r\n                    alert('Ошибка')\r\n                } finally {\r\n                    this.isPostLoading = false;\r\n                }\r\n            }\r\n            // changePage(pageNumber) {\r\n            //     this.page = pageNumber;\r\n            // }\r\n        },\r\n        mounted() {\r\n            this.fetchPost();\r\n            console.log(this.$refs.observer)\r\n            const options = {\r\n                rootMargin: '0px',\r\n                threshold: 1.0\r\n            }\r\n\r\n            const callback = (entries, observer) => { //это как раз та функция, которая отработает, когда мы пересекли необходимвй элемент\r\n                if(entries[0].isIntersecting) {\r\n                    this.loadMorePost();\r\n                }\r\n            }\r\n\r\n            const observer = new IntersectionObserver(callback, options);\r\n            observer.observe(this.$refs.observer)\r\n        },\r\n        computed: {\r\n            sortedPosts() {\r\n                return [...this.posts].sort((post1, post2) =>\r\n                    post1[this.selectedSort]?.localeCompare(post2[this.selectedSort])\r\n                )\r\n            },\r\n            sortedAndSearchPost() {\r\n                return this.sortedPosts.filter(post => post.title.toLowerCase().includes(this.searchQuery.toLowerCase()))\r\n            }\r\n        },\r\n        watch: {\r\n            // page() {\r\n            //     this.fetchPost();\r\n            // }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\nform {\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n    .app {\r\n        padding: 20px;\r\n    }\r\n    .app__btns {\r\n        margin: 15px 0;\r\n        display: flex;\r\n        justify-content: space-between;\r\n    }\r\n    .page__wrapper {\r\n        display: flex;\r\n        margin-top: 15px;\r\n        align-items: center;\r\n        align-content: center;\r\n        justify-content: center;\r\n    }\r\n    .page {\r\n        border: 1px solid black;\r\n        padding: 10px;\r\n        margin-right: 5px;\r\n    }\r\n    .current-page {\r\n        border: 2px solid teal;\r\n    }\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}